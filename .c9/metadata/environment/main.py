{"filter":false,"title":"main.py","tooltip":"/main.py","undoManager":{"mark":15,"position":15,"stack":[[{"start":{"row":1373,"column":99},"end":{"row":1374,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":1374,"column":0},"end":{"row":1374,"column":4},"action":"insert","lines":["    "]},{"start":{"row":1374,"column":4},"end":{"row":1375,"column":0},"action":"insert","lines":["",""]},{"start":{"row":1375,"column":0},"end":{"row":1375,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":1375,"column":0},"end":{"row":1375,"column":4},"action":"remove","lines":["    "],"id":3}],[{"start":{"row":1375,"column":0},"end":{"row":1431,"column":0},"action":"insert","lines":["####################################################################","### ACI ACCESS POLICIES LEAF ACCESS BUNDLE POLICY GROUPS         ###","####################################################################","","def leaf_access_bundle_policy_group_file():","    directory = \"data\"","    filename = os.path.join(directory, \"py_leaf_access_bundle_policy_group.csv\")","    headers = [","        \"APIC\", \"infraAccBndlGrp_name\", \"infraAccBndlGrp_dn\"","    ]","","    if not os.path.exists(directory):","        os.makedirs(directory)","","    if not os.path.exists(filename):","        with open(filename, 'w', newline='') as file:","            writer = csv.writer(file)","            writer.writerow(headers)","            print(f\"'{filename}' has been created with the required headers.\")","","def get_leaf_access_bundle_policy_groups(token):","    URL = f\"{ACI_BASE_URL}/api/node/mo/uni/infra/funcprof.json?query-target=subtree&target-subtree-class=infraAccBndlGrp\"","    headers = {","        \"Cookie\": f\"APIC-Cookie={token}\",","        \"Content-Type\": \"application/json\"","    }","","    response = requests.get(URL, headers=headers, verify=False)","    filename = os.path.join(\"data\", \"py_leaf_access_bundle_policy_group.csv\")","","    if response.status_code == 200:","        data = response.json()","        existing_entries = []","","        with open(filename, mode='r', newline='') as file:","            reader = csv.reader(file)","            existing_entries.extend(list(reader))","","        for entry in data['imdata']:","            infraAccBndlGrp_name = entry[\"infraAccBndlGrp\"][\"attributes\"][\"name\"]","            infraAccBndlGrp_dn = entry[\"infraAccBndlGrp\"][\"attributes\"][\"dn\"]","","            row_as_list = [","                os.environ.get('TF_VAR_CISCO_ACI_APIC_IP_ADDRESS'),","                infraAccBndlGrp_name,","                infraAccBndlGrp_dn","            ]","","            if row_as_list not in existing_entries[1:]:  # Skip the header when checking for existence","                existing_entries.append(row_as_list)","","        with open(filename, mode='w', newline='') as file:","            writer = csv.writer(file)","            writer.writerows(existing_entries)","    else:","        print(f\"Failed to retrieve Bundle Policy Groups. Status code: {response.status_code}\")",""],"id":4}],[{"start":{"row":1431,"column":0},"end":{"row":1432,"column":0},"action":"insert","lines":["",""],"id":5}],[{"start":{"row":1432,"column":0},"end":{"row":1445,"column":4},"action":"insert","lines":["def tf_ciscodevnet_aci_leaf_access_bundle_policy_group():","    csv_filepath = os.path.join(\"data\", \"py_leaf_access_bundle_policy_group.csv\")","    with open(csv_filepath, mode='r') as csv_file:","        reader = csv.DictReader(csv_file)","        entries = list(reader)","","    hcl_template = Template(\"\"\"","resource \"aci_leaf_access_bundle_policy_group\" \"{{infraAccBndlGrp_name}}\" {","    name        = \"{{infraAccBndlGrp_name}}\"","    lifecycle {","        ignore_changes = all","    }","} ","\"\"\")"],"id":6}],[{"start":{"row":1445,"column":4},"end":{"row":1446,"column":0},"action":"insert","lines":["",""],"id":7},{"start":{"row":1446,"column":0},"end":{"row":1447,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":1432,"column":0},"end":{"row":1445,"column":4},"action":"remove","lines":["def tf_ciscodevnet_aci_leaf_access_bundle_policy_group():","    csv_filepath = os.path.join(\"data\", \"py_leaf_access_bundle_policy_group.csv\")","    with open(csv_filepath, mode='r') as csv_file:","        reader = csv.DictReader(csv_file)","        entries = list(reader)","","    hcl_template = Template(\"\"\"","resource \"aci_leaf_access_bundle_policy_group\" \"{{infraAccBndlGrp_name}}\" {","    name        = \"{{infraAccBndlGrp_name}}\"","    lifecycle {","        ignore_changes = all","    }","} ","\"\"\")"],"id":9},{"start":{"row":1432,"column":0},"end":{"row":1467,"column":0},"action":"insert","lines":["def tf_ciscodevnet_aci_leaf_access_bundle_policy_group():","    csv_filepath = os.path.join(\"data\", \"py_leaf_access_bundle_policy_group.csv\")","    with open(csv_filepath, 'r') as csv_file:","        reader = csv.DictReader(csv_file)","        entries = list(reader)","","    hcl_template = Template(\"\"\"","resource \"aci_leaf_access_bundle_policy_group\" \"{{ infraAccBndlGrp_name }}\" {","  name        = \"{{ infraAccBndlGrp_name }}\"","  lifecycle {","    ignore_changes = all","  }","}","\"\"\")","","    with open('import.tf', 'a+') as tf_file:","        tf_file.seek(0)","        existing_content = tf_file.read()","","    new_hcl_content = \"\"","    for entry in entries:","        specific_resource_line = f'resource \"aci_leaf_access_bundle_policy_group\" \"{entry[\"infraAccBndlGrp_name\"]}\"'","","        if specific_resource_line not in existing_content:","            new_hcl_content += hcl_template.render(","                infraAccBndlGrp_name=entry['infraAccBndlGrp_name']","            )","        else:","            print(f\"Entry {entry['infraAccBndlGrp_name']} already exists in import.tf\")","","    if new_hcl_content:","        with open('import.tf', 'a') as tf_file:","            tf_file.write(new_hcl_content)","","    print(\"Terraform resources for Leaf Access Bundle Policy Groups appended to import.tf successfully!\")",""]}],[{"start":{"row":1468,"column":0},"end":{"row":1498,"column":110},"action":"insert","lines":["def tf_ciscodevnet_aci_leaf_access_bundle_policy_group_commands():","    csv_filepath = os.path.join(\"data\", \"py_leaf_access_bundle_policy_group.csv\")","    with open(csv_filepath, 'r') as csv_file:","        reader = csv.DictReader(csv_file)","        entries = list(reader)","","    command_template = Template(\"\"\"","terraform import aci_leaf_access_bundle_policy_group.{{ infraAccBndlGrp_name }} {{ infraAccBndlGrp_dn }}","\"\"\")","","    with open('import_commands.sh', 'a+') as cmd_file:","        cmd_file.seek(0)","        existing_content = cmd_file.read()","","    new_commands_content = \"\"","    for entry in entries:","        specific_command_line = f\"terraform import aci_leaf_access_bundle_policy_group.{entry['infraAccBndlGrp_name']}\"","","        if specific_command_line not in existing_content:","            new_commands_content += command_template.render(","                infraAccBndlGrp_name=entry['infraAccBndlGrp_name'],","                infraAccBndlGrp_dn=entry['infraAccBndlGrp_dn']","            )","        else:","            print(f\"Command for {entry['infraAccBndlGrp_name']} already exists in import_commands.sh\")","","    if new_commands_content:","        with open('import_commands.sh', 'a') as cmd_file:","            cmd_file.write(new_commands_content)","","    print(\"Import commands for Leaf Access Bundle Policy Groups appended to import_commands.sh successfully!\")"],"id":10}],[{"start":{"row":1495,"column":36},"end":{"row":1495,"column":37},"action":"remove","lines":["h"],"id":11},{"start":{"row":1495,"column":35},"end":{"row":1495,"column":36},"action":"remove","lines":["s"]}],[{"start":{"row":1495,"column":35},"end":{"row":1495,"column":36},"action":"insert","lines":["t"],"id":12},{"start":{"row":1495,"column":36},"end":{"row":1495,"column":37},"action":"insert","lines":["x"]},{"start":{"row":1495,"column":37},"end":{"row":1495,"column":38},"action":"insert","lines":["t"]}],[{"start":{"row":1478,"column":31},"end":{"row":1478,"column":33},"action":"remove","lines":["sh"],"id":13},{"start":{"row":1478,"column":31},"end":{"row":1478,"column":32},"action":"insert","lines":["t"]},{"start":{"row":1478,"column":32},"end":{"row":1478,"column":33},"action":"insert","lines":["x"]},{"start":{"row":1478,"column":33},"end":{"row":1478,"column":34},"action":"insert","lines":["t"]}],[{"start":{"row":1516,"column":36},"end":{"row":1517,"column":0},"action":"insert","lines":["",""],"id":14}],[{"start":{"row":1517,"column":0},"end":{"row":1517,"column":38},"action":"insert","lines":["leaf_access_bundle_policy_group_file()"],"id":15}],[{"start":{"row":1530,"column":41},"end":{"row":1531,"column":0},"action":"insert","lines":["",""],"id":16}],[{"start":{"row":1531,"column":0},"end":{"row":1531,"column":43},"action":"insert","lines":["get_leaf_access_bundle_policy_groups(token)"],"id":17}],[{"start":{"row":1550,"column":0},"end":{"row":1551,"column":61},"action":"insert","lines":["tf_ciscodevnet_aci_leaf_access_bundle_policy_group()","tf_ciscodevnet_aci_leaf_access_bundle_policy_group_commands()"],"id":18}]]},"ace":{"folds":[],"scrolltop":20934,"scrollleft":0,"selection":{"start":{"row":1528,"column":21},"end":{"row":1528,"column":21},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":1494,"state":"start","mode":"ace/mode/python"}},"timestamp":1699031397020,"hash":"04de5855609778954db21bd6d930852d91184fba"}