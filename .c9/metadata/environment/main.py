{"filter":false,"title":"main.py","tooltip":"/main.py","undoManager":{"mark":13,"position":13,"stack":[[{"start":{"row":1116,"column":0},"end":{"row":1117,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":1117,"column":0},"end":{"row":1184,"column":35},"action":"insert","lines":["def tf_ciscodevnet_aci_interface_profile():","    csv_filepath = os.path.join(\"data\", \"py_interface_profile.csv\")","    with open(csv_filepath, 'r') as csv_file:","        reader = csv.DictReader(csv_file)","        entries = list(reader)","","    interface_profile_template = Template(\"\"\"","resource \"aci_leaf_interface_profile\" \"{{infraAccPortP_name}}\" {","    name = \"{{infraAccPortP_name}}\"","    ","    lifecycle {","        ignore_changes = all","    }","}","\"\"\")","","    access_port_selector_template = Template(\"\"\"","resource \"aci_access_port_selector\" \"{{infraAccPortP_name}}-{{infraHPortS_name}}\" {","    leaf_interface_profile_dn = aci_leaf_interface_profile.{{infraAccPortP_name}}.id","    name                      = \"{{infraHPortS_name}}\"","    access_port_selector_type = \"range\"","","    lifecycle {","        ignore_changes = all","    }","}","\"\"\")","","    access_port_block_template = Template(\"\"\"","resource \"aci_access_port_block\" \"{{infraAccPortP_name}}-{{infraHPortS_name}}-E{{infraPortBlk_fromCard}}_{{infraPortBlk_fromPort}}-E{{infraPortBlk_toCard}}_{{infraPortBlk_toPort}}\" {","    access_port_selector_dn = aci_access_port_selector.{{infraAccPortP_name}}-{{infraHPortS_name}}.id","    from_card               = \"{{infraPortBlk_fromCard}}\"","    from_port               = \"{{infraPortBlk_fromPort}}\"","    to_card                 = \"{{infraPortBlk_toCard}}\"","    to_port                 = \"{{infraPortBlk_toPort}}\"","","    lifecycle {","        ignore_changes = all","    }","}","\"\"\")","","    with open('import.tf', 'a+') as tf_file:","        tf_file.seek(0)","        existing_content = tf_file.read()","","    new_terraform_content = \"\"","    added_interface_profiles = set()","","    for entry in entries:","        interface_profile_id = f\"{entry['infraAccPortP_name']}-{entry['infraHPortS_name']}\"","        if entry['infraAccPortP_name'] not in added_interface_profiles:","            new_terraform_content += interface_profile_template.render(","                infraAccPortP_name=entry['infraAccPortP_name']","            )","            added_interface_profiles.add(entry['infraAccPortP_name'])","","        if interface_profile_id not in existing_content:","            new_terraform_content += access_port_selector_template.render(","                infraAccPortP_name=entry['infraAccPortP_name'],","                infraHPortS_name=entry['infraHPortS_name']","            )","            new_terraform_content += access_port_block_template.render(","                infraAccPortP_name=entry['infraAccPortP_name'],","                infraHPortS_name=entry['infraHPortS_name'],","                infraPortBlk_fromCard=entry['infraPortBlk_fromCard'],","                infraPortBlk_fromPort=entry['infraPortBlk_fromPort'],","                infraPortBlk_toCard"],"id":4}],[{"start":{"row":1184,"column":35},"end":{"row":1185,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":1185,"column":0},"end":{"row":1185,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":1185,"column":0},"end":{"row":1230,"column":48},"action":"insert","lines":["                infraPortBlk_toCard=entry['infraPortBlk_toCard'],","                infraPortBlk_toPort=entry['infraPortBlk_toPort']","            )","","    if new_terraform_content:","        with open('import.tf', 'a') as tf_file:","            tf_file.write(new_terraform_content)","","def generate_import_commands():","    csv_filepath = os.path.join(\"data\", \"py_interface_profile.csv\")","    with open(csv_filepath, 'r') as csv_file:","        reader = csv.DictReader(csv_file)","        entries = list(reader)","","    command_template = Template(\"\"\"","terraform import aci_leaf_interface_profile.{{infraAccPortP_name}} {{infraAccPortP_dn}}","terraform import aci_access_port_selector.{{infraAccPortP_name}}-{{infraHPortS_name}} uni/infra/accportprof-{{infraAccPortP_name}}/{{infraHPortS_rn}}","terraform import aci_access_port_block.{{infraAccPortP_name}}-{{infraHPortS_name}}-E{{infraPortBlk_fromCard}}_{{infraPortBlk_fromPort}}-E{{infraPortBlk_toCard}}_{{infraPortBlk_toPort}} uni/infra/accportprof-{{infraAccPortP_name}}/{{infraHPortS_rn}}/{{infraPortBlk_rn}}","\"\"\")","","    with open('import_commands.txt', 'a+') as cmd_file:","        cmd_file.seek(0)","        existing_content = cmd_file.read()","","    new_commands_content = \"\"","    added_interface_profiles = set()","","    for entry in entries:","        interface_profile_id = f\"{entry['infraAccPortP_name']}-{entry['infraHPortS_name']}\"","        if entry['infraAccPortP_name'] not in added_interface_profiles:","            new_commands_content += command_template.render(","                infraAccPortP_name=entry['infraAccPortP_name'],","                infraHPortS_name=entry['infraHPortS_name'],","                infraAccPortP_dn=entry['infraAccPortP_dn'],","                infraHPortS_rn=entry['infraHPortS_rn'],","                infraPortBlk_fromCard=entry['infraPortBlk_fromCard'],","                infraPortBlk_fromPort=entry['infraPortBlk_fromPort'],","                infraPortBlk_toCard=entry['infraPortBlk_toCard'],","                infraPortBlk_toPort=entry['infraPortBlk_toPort'],","                infraPortBlk_rn=entry['infraPortBlk_rn']","            )","            added_interface_profiles.add(entry['infraAccPortP_name'])","","    if new_commands_content:","        with open('import_commands.txt', 'a') as cmd_file:","            cmd_file.write(new_commands_content)"],"id":6}],[{"start":{"row":1184,"column":0},"end":{"row":1184,"column":35},"action":"remove","lines":["                infraPortBlk_toCard"],"id":7},{"start":{"row":1183,"column":69},"end":{"row":1184,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":1192,"column":4},"end":{"row":1192,"column":20},"action":"remove","lines":["generate_import_"],"id":8},{"start":{"row":1192,"column":4},"end":{"row":1192,"column":40},"action":"insert","lines":["tf_ciscodevnet_aci_interface_profile"]}],[{"start":{"row":1270,"column":39},"end":{"row":1271,"column":0},"action":"insert","lines":["",""],"id":9}],[{"start":{"row":1271,"column":0},"end":{"row":1271,"column":38},"action":"insert","lines":["tf_ciscodevnet_aci_interface_profile()"],"id":10}],[{"start":{"row":1271,"column":38},"end":{"row":1272,"column":0},"action":"insert","lines":["",""],"id":11}],[{"start":{"row":1192,"column":40},"end":{"row":1192,"column":41},"action":"insert","lines":["_"],"id":12}],[{"start":{"row":1271,"column":38},"end":{"row":1272,"column":0},"action":"insert","lines":["",""],"id":13}],[{"start":{"row":1272,"column":0},"end":{"row":1272,"column":47},"action":"insert","lines":["tf_ciscodevnet_aci_interface_profile_commands()"],"id":14}],[{"start":{"row":1256,"column":21},"end":{"row":1257,"column":0},"action":"insert","lines":["",""],"id":15}],[{"start":{"row":1257,"column":0},"end":{"row":1257,"column":29},"action":"insert","lines":["get_interface_profiles(token)"],"id":16}]]},"ace":{"folds":[],"scrolltop":16941.5,"scrollleft":0,"selection":{"start":{"row":1211,"column":25},"end":{"row":1211,"column":25},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":1209,"state":"start","mode":"ace/mode/python"}},"timestamp":1698681690329,"hash":"b819f45055390ded9ad8760a8629924d3c167aa5"}